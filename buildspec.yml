version: 0.2

phases:
  install: 
    runtime-versions:
      php: latest
      nodejs: 12.x
  pre_build:
    commands:
    - echo Logging in to Amazon ECR....
    - aws --version
    # log in to Elastic container registry
    - aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 618876817619.dkr.ecr.us-west-1.amazonaws.com
    - REPOSITORY_URI=618876817619.dkr.ecr.us-west-1.amazonaws.com/wfg
    - IMAGE_TAG=1.0
  build:
    commands: 
    - echo Installing front-end dependencies...
    - npm install
    - echo Building front-end assets...
    - npm run prod
    - echo Installing composer libraries...
    - composer install
    - php artisan config:cache
    - php artisan config:clear
    - php artisan cache:clear
    - php artisan route:clear

    # Build & push the Docker image. 
    - echo Building the Docker image...
    - docker build -t $REPOSITORY_URI:latest .
    - echo Pushing the Docker image to $REPOSITORY_URI...
    - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`.
      - echo Pushing the Docker image...
      - docker image ls -a
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      # Fairly certain we don't need this  stage anymore. 
      - echo Writing image definitions file...
      - printf '[{"name":"'$ecs_container_name'","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json